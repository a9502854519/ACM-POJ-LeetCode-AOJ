先把環斷開成一個鍊來考慮，假設L[i]代表長度為i的鍊，且不超過k
個同色相鄰的著色方法數，在i <= k時，是沒有任何限制的，可以任
意著色；在i > k時，就有可能超過k個同色相鄰，要扣除掉。先講結
論：
    L[i] = L[i - 1] * 2                   if i <= k
    L[i] = L[i - 1] * 2 - 2               if i > k & i < k + 2
    L[i] = L[i - 1] * 2 - L[i - k - 1]    if i >= k + 2

在i = k + 1 或 i = k + 2時，要扣掉後k + 1個同色的情況，總共
只有兩種。在i >= k + 2時，要扣除掉後k + 1個同色的情況，而只要
決定前i - k - 1的著色方法數，後k + 1個也會跟著決定。舉個例子，
i = 8, k = 5，只要決定前兩個，假設是AB，則後面一定會是AAAAAA，
也就是說，後k + 1個的著色是取決於第i - k - 1的顏色。
再來回到原問題，旋轉後相同算同一種的部份，如果用波利亞計數定理
處理，則只需要考慮每個置換群的填色方法數，問題就被簡化了。考慮
有m個置換群的排列f，如果m <= k 且k < n，則L[m]中，全同色的方法
數不能算進去，要減掉2；如果 m = k + 1，則首尾相連後並不會發生超
過k個同色相鄰的情況；如果m > k + 1，則要考慮有i = 2k個相鄰、2k - 1,
....,k + 1個相鄰的情況，則問題就變成計算長度m - i的鍊、首尾同色
的方法數。因此L[i]要分成兩個部份計算：首尾同色的方法數L1 + 首尾
異色的方法數L2(詳細的遞推式不難，這裡不贅述)。
以上。