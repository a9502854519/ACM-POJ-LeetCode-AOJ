因為權重是相加的，所以可以針對每個元素分
別做計算。對於某個元素，假定它所在的集合
大小為S，則集合的分割的方法數為：從剩下
的n - 1個元素中選取S - 1個，再把剩下的
n - S - 1個元素分成k - 1個群組。令S(n, k)
表n個元素，分為k個群組的方法數，則以上的
計算可以表達成：
1 * C(n - 1, 0) * S(n - 1, k - 1) +
2 * C(n - 1, 1) * S(n - 2, k - 1) +
3 * C(n - 1, 2) * S(n - 3, k - 1) +
.
.
.
(n - k + 1) * C(n - 1, n - k) * S(k - 1, k - 1)
另外，可以發現，根據以上的分析，S(n, k)可以寫成：
C(n - 1, 0) * S(n - 1, k - 1) + 
C(n - 1, 1) * S(n - 2, k - 1) + 
.
.
.
C(n - 1, n - k) * S(k - 1, k - 1)
因此第一式可以寫成：
S(n, k) + 1 * C(n - 1, 1) * S(n - 2, k - 1) + 
          2 * C(n - 1, 2) * S(n - 3, k - 1) +
          3 * C(n - 1, 3) * S(n - 4, k - 1) + 
          .
          .
          .
          (n - k) * C(n - 1, n - k) * S(k - 1, k - 1)
而S(n - 1, k)可以寫成
          C(n - 2, 0) * S(n - 2, k - 1) + 
          C(n - 2, 1) * S(n - 3, k - 1) + 
          C(n - 2, 2) * S(n - 4, k - 1) +
          .
          .
          .
          C(n - 2, n - k - 1) * S(k - 1, k - 1)
比較上下兩式可以發現，第一式可以寫成S(n, k) + (n - 1) * S(n - 1, k)
時間複雜度為O(klog(n))
-------------------------------
Codeforces的題解：對於某個元素i，如果其所在的集合
多了某個元素j，則元素i的權重會增加wi。意思是，跟
i同個集合的所有元素，對於i的權重的貢獻會是wi。因此
只要計算有多少個這樣的元素，就可以知道i的權重總和
是多少了。i本身自己對自己的貢獻數為S(n, k)，對於某
個不等於i的j，先把i拿掉，把剩下的n - 1個分成k個群
組，再把i加到j所在的那個群組，總方法數為S(n - 1, k)
所以總和為S(n, k) + (n - 1) * S(n - 1, k)