很理所當然地會想用書上的做法，但還缺少一些東西，給定以下字串：
C
ACAG

當我們拼出了"AC"後，再拼一個C，狀態就會轉移到"C"。問題來了，
前面的"AC"就沒人管了，因為我們並沒有考慮到，字尾還有多少個字
元還沒被「完成」。因此可以定義以下狀態式：
     dp(i, j, k) := 長度為i、結尾為字串pfx(j)、且還有k個字元
	 還沒被完成，的方法數。
如果附加了一個字元c，可以將那k個字元給「完成」的話，則狀態會
轉移至：
       dp(i + 1, next_pfx, 0)
若沒有辦法的話，則是：
       dp(i + 1, next_pfx, k + 1)
判斷是否可以「完成」那k個字元的辦法，如下所述：
***$$$$c
假設上述是目前狀態的結尾字串，其中'*'是已經「完成」的，'$'則否。
'c'則是附加的字元。只需要檢查該字串結尾能夠match到的、最長的那
個(測資給的)字串，該長度是否 > k，若是，則代表那k個字元可以被
「完成」。