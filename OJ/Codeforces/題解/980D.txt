假設a, b, c皆為>=1的整數。如果a * b為平方數，b * c為平方數，則
a * c必為平方數。這是因為如果兩數相乘為平方數，則它們兩個一定
帶有相同的奇數次方的質因數。先將數字做質因數分解，將奇數次方的
質因數保留一個，則問題就變成對於某個k = [1, n]，計算有多少個子
陣列，該陣列中剛好出現k個不同的數字。令dp[i][j]表示以i為結尾，長
度為j的子陣列中，出現的數字種類個數。則遞推式如下：
    dp[i][j] = dp[i - 1][j - 1]      (a[i]有出現在[i - j + 1, i - 1]中)
             = dp[i - 1][j - 1] + 1  (a[i]沒有出現在[i - j + 1, i - 1]中)
可以事先計算上一個a[i]出現的位置，就可以立刻判斷a[i]有沒有出現在
該子陣列中了。但還有個棘手的情況：0
0跟任何數字相乘都為平方數(0 * 0 = 0)，因此0可以跟任何一個數字一組
，考慮a[i] == 0的情況，因為0可以加入任何一組，則dp[i][j] = dp[i - 1][j - 1]；
接著考慮[i - j + 1, i - 1]皆為0的情況，不管a[i]是否為0，都可以跟0
一組，則dp[i][j] = dp[i - 1][j - 1]。
    