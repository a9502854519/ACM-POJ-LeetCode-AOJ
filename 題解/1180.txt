很容易想出如下的狀態式：
dp[i] = 前i個的最小成本。
對於第i個工作，它可以自成一個批次，也可以跟前面
一個、二個、....組成一個批次。需要注意的是，每
新增一個批次時，後面所有的工作都會被影響到，必
須考慮進去，可以想到如下遞推式：
SF(i)：前i個的F總和
ST(i)：前i個的T總和
dp[i] = min{dp[j] + (SF(N) - SF(j)) * (S + ST(i) - ST(j)), 0 <= j < i}
                    j + 1到最後一個     j + 1到i的時間總和
					工作的F總和
將上式展開後可得：
dp[j] + SF(N) * S - SF(N) * ST(j) - SF(j) * S - SF(j) * ST(j) + (SF(N) - SF(j)) * ST(i)
可以看出是一個ST(i)的一次式。可以用雙端隊列優化。